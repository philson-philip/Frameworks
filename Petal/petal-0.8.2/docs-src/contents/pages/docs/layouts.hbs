---
title: Layout
area: docs
section: components
list-order: 1
---

<div class="section-header">
	<h2 id="section-layout">Layout</h2>
	<p class="sub">
		<span class="file-ref">layout.less</span>
	</p>
</div>

<h3>Container</h3>
<p>A <code>.container</code> is the top-most wrapper for your main contents. By default a container has a fixed value (980px) to limit the content width. Modify the <code>@container-width</code> variable to change the width. A container has the left and right margins set to <code>auto</code> that will center the container inside its parent.</p>

<div class="demo-code">
{{#markdown}}
``` html
<header>
	<div class="container">
		Header content
	</div>
</header>
<section>
	<div class="container">
		Section content
	</div>
</section>
```
{{/markdown}}
</div>

<p>For example, to create a common landing-page layout where you have multiple section divided vertically that differ in background colors, you would have parent section elements that stretch horizontally, then inside you would have a container that wraps the contents.</p>

<p>If for some reason you need to override the container width and stretch it 100% of the parent width, add <code>.stretch</code> to it. The <code>.stretch</code> class also works independently. (<code>width: 100%</code> is the only property it has.)</p>

<br>

<h3>Columns</h3>
<p>Petal has a basic layout system where you can make quick, simple columns. This doesn't include any responsive overrides for mobile screen widths though; the columns will always stretch and collapse relatively to the container width.</p>

<p>By default, Petal uses the CSS3 Flexbox properties for column layouts. Most modern browsers <a href="http://caniuse.com/#search=flex">support</a> flexboxes just fine (in case of IE, versions 10 and up), but if for some reason you need to fall back to the traditional 'float' method, change the <code>@col-method: flex;</code> in your variables sheet to <code>float</code>.</p>

<p>By the looks, both methods will display exactly the same with the same settings. Using flexbox has some benefits, including a cleaner markup because you don't need the <a href="http://nicolasgallagher.com/micro-clearfix-hack/">micro clearfix</a> hack anymore (that inserts pseudo <code>:before</code> and <code>:after</code> elements to the parent row element), and that you can use some optional classes that will work only in flexbox mode.</p>

<br>

<div class="row borders mb-10">
	<div class="col-1 bg-green-l2"><span>.col-1</span></div>
</div>
<div class="row borders mb-10">
	<div class="col-2 bg-green-l2"><span>.col-2</span></div>
	<div class="col-2 bg-green-l2"><span>.col-2</span></div>
</div>
<div class="row borders mb-10">
	<div class="col-3 bg-green-l2"><span>.col-3</span></div>
	<div class="col-3 bg-green-l2"><span>.col-3</span></div>
	<div class="col-3 bg-green-l2"><span>.col-3</span></div>
</div>
<div class="row borders mb-10">
	<div class="col-4 bg-green-l2"><span>.col-4</span></div>
	<div class="col-4 bg-green-l2"><span>.col-4</span></div>
	<div class="col-4 bg-green-l2"><span>.col-4</span></div>
	<div class="col-4 bg-green-l2"><span>.col-4</span></div>
</div>
<div class="row borders mb-10">
	<div class="col-5 bg-green-l2"><span>.col-5</span></div>
	<div class="col-5 bg-green-l2"><span>.col-5</span></div>
	<div class="col-5 bg-green-l2"><span>.col-5</span></div>
	<div class="col-5 bg-green-l2"><span>.col-5</span></div>
	<div class="col-5 bg-green-l2"><span>.col-5</span></div>
</div>

<p>Place a div with the <code>.row</code> class, then insert <code>.col-<em>x</em></code> class inside to make columns, where <em>x</em> is the number of columns the row is divided into. (Supports up to 5 columns)</p>

<p>The <code>.row</code> element has a negative horizontal margin with the same width as the <code>@container-padding</code>, so that the columns inside rows won't have doubled padding width. If you're not using a <code>.row</code> inside <code>.container</code>, make sure you manually specify paddings for the parent wrapper (You can use a <code>.ph-15</code> <a href="utilities.html">quick-padding</a> class)</p>

<p>The default left/right padding for the columns is 15px, same as the <code>.container</code> inner paddings. To change this, modify the <code>@col-padding</code> value. It's recommended that you keep the column padding value and the container inner padding value equal.</p>

<br>

<h5>Spanned columns</h5>
<div class="row borders mb-10">
	<div class="col-3 colspan-2 bg-blue-l2"><span>.col-3.colspan-2</span></div>
	<div class="col-3 bg-blue-l2"><span>.col-3</span></div>
</div>
<div class="row borders mb-10">
	<div class="col-4 colspan-2 bg-blue-l2"><span>.col-4.colspan-2</span></div>
	<div class="col-4 bg-blue-l2"><span>.col-4</span></div>
	<div class="col-4 bg-blue-l2"><span>.col-4</span></div>
</div>
<div class="row borders mb-10">
	<div class="col-4 bg-blue-l2"><span>.col-4</span></div>
	<div class="col-4 colspan-3 bg-blue-l2"><span>.col-4.colspan-3</span></div>
</div>

<p>Add <code>.colspan-<em>x</em></code> to column divs, where <em>x</em> is the number of columns you would 'merge' (think of a table layout).</p>

<br>

<h5>Nesting columns</h5>
<div class="row borders mb-10">
	<div class="col-3 bg-blue-l2">
		<span>.col-3</span>
		<div class="row borders">
			<div class="col-2 bg-blue-l1"><span>.col-2</span></div>
			<div class="col-2 bg-blue-l1"><span>.col-2</span></div>
		</div>
	</div>
	<div class="col-3 bg-green-l2">
		<span>.col-3</span>
		<div class="row borders">
			<div class="col-3 bg-green-l1"><span>.col-3</span></div>
			<div class="col-3 bg-green-l1"><span>.col-3</span></div>
			<div class="col-3 bg-green-l1"><span>.col-3</span></div>
		</div>
	</div>
	<div class="col-3 bg-red-l2">
		<span>.col-3</span>
		<div class="row borders">
			<div class="col-1 bg-red-l1"><span>.col-1</span></div>
		</div>
	</div>
</div>
<p>You can nest any columns inside columns. Just don't forget to nest <code>.row</code>s as well. </p>

<br>

<h5>Collapsed column gutters</h5>
<div class="demo-panel gray ph-15 pv-5">
	<h6 class="label">Normal</h6>
	<div class="row">
		<div class="col-1 bg-blue-l2 stretch pv-5"><div class="panel p-15">.col-1</div></div>
	</div>
	<div class="row">
		<div class="col-3 bg-blue-l2 stretch pv-5"><div class="panel p-15">.col-3</div></div>
		<div class="col-3 bg-green-l2 stretch pv-5"><div class="panel p-15">.col-3</div></div>
		<div class="col-3 bg-blue-l2 stretch pv-5"><div class="panel p-15">.col-3</div></div>
	</div>
	<div class="row">
		<div class="col-3 bg-red-l2 stretch pv-5 colspan-2"><div class="panel p-15">.col-3.colspan-2</div></div>
		<div class="col-3 bg-blue-l2 stretch pv-5"><div class="panel p-15">.col-3</div></div>
	</div>
	<h6 class="label">Collapsed Gutters</h6>
	<div class="row collapse-gutter">
		<div class="col-1 bg-blue-l2 stretch pv-5"><div class="panel p-15">.col-1</div></div>
	</div>
	<div class="row collapse-gutter">
		<div class="col-3 bg-blue-l2 stretch pv-5"><div class="panel p-15">.col-3</div></div>
		<div class="col-3 bg-green-l2 stretch pv-5"><div class="panel p-15">.col-3</div></div>
		<div class="col-3 bg-blue-l2 stretch pv-5"><div class="panel p-15">.col-3</div></div>
	</div>
	<div class="row collapse-gutter">
		<div class="col-3 bg-red-l2 stretch pv-5 colspan-2"><div class="panel p-15">.col-3.colspan-2</div></div>
		<div class="col-3 bg-blue-l2 stretch pv-5"><div class="panel p-15">.col-3</div></div>
	</div>
</div>

<p>Add <code>.collapse-gutter</code> class on parent <code>.row</code> elements and it will 'collapse' the gutter inbetween columns by reducing the padding space to half while keeping the outer paddings on left and right. This is useful in cases where you want to make a layout out of <a href="panels.html">Panels</a> and want to reduce the visible horizontal gutter size inbetween them.</p>

<br>

<h5>Vertically stretched columns (Flexbox Only)</h5>
<div class="demo-panel gray ph-15 pv-5">
	<h6 class="label">Normal</h6>
	<div class="row collapse-gutter pb-10">
		<div class="col-3 colspan-2">
			<div class="panel p-15">
				Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit ducimus nam ad, eligendi dolor similique provident nisi magnam, eum itaque, quibusdam nostrum libero.
			</div>		
		</div>
		<div class="col-3">
			<div class="panel p-15 mb-10">Lorem ipsum dolor sit amet.</div>
			<div class="panel p-15">Autem harum beatae alias voluptas ipsa, illo consequatur.</div>
		</div>
	</div>

	<h6 class="label">Stretched</h6>
	<div class="row collapse-gutter pb-10">
		<div class="col-3 stretch colspan-2">
			<div class="panel p-15">
				Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit ducimus nam ad, eligendi dolor similique provident nisi magnam, eum itaque, quibusdam nostrum libero.
			</div>		
		</div>
		<div class="col-3">
			<div class="panel p-15 mb-10">Lorem ipsum dolor sit amet.</div>
			<div class="panel p-15">Autem harum beatae alias voluptas ipsa, illo consequatur.</div>
		</div>
	</div>
</div>

<p>Add <code>.stretch</code> class on <code>.col-x</code> elements to vertically stretch children elements to row height. This will only work when you're using the flexbox columns.</p>

<br>

<h4>Customizable LESS variables</h4>
<div class="demo-code">
{{#markdown}}
``` less
// layout
@container-width: 980px;
@container-padding: 15px;
@col-method: flex; // flex or float (legacy)
@col-padding: 15px;
```
{{/markdown}}
</div>